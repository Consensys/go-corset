;; Shift a u32 word a given number of bytes to the left.
fn u32_lshf(value u32, n u2) -> (res u32) {
  var b0,b1,b2,b3 u8
  ;; Check for base case
  if n == 0 goto base
  ;; Recursive case
  var acc u32
  var tmp u8
  var b u1
  var m u2
  ;; Decompose value
  b3,b2,b1,b0 = value
  ;; Recompose shifted value
  acc = b2
  tmp,acc = acc * 256
  tmp,acc = acc + b1
  tmp,acc = acc * 256
  tmp,acc = acc + b0
  tmp,acc = acc * 256
  ;;
  b,m = n - 1
  res = u32_lshf(acc,m)
  return
base:
  res = value
  return
}
