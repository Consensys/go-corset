;; Find the index of the first non null byte

fn first_nonzero_byte(word=0 u256) -> (res=31 u5) {
    var word_hi, word_lo u128
    var tmp_res u4
    word_hi, word_lo = word
    if word_hi != 0 goto high_lab
    tmp_res = first_nonzero_byte128(word_lo)
    res = 16 + tmp_res
    return
high_lab:
    res = first_nonzero_byte128(word_hi)
    return
}

fn first_nonzero_byte128(word=0 u128) -> (res=15 u4) {
    var word_hi, word_lo u64
    var tmp_res u3
    word_hi, word_lo = word
    if word_hi != 0 goto high_lab
    tmp_res = first_nonzero_byte64(word_lo)
    res = 8 + tmp_res
    return
high_lab:
    res = first_nonzero_byte64(word_hi)
    return
}

fn first_nonzero_byte64(word=0 u64) -> (res=7 u3) {
    var word_hi, word_lo u32
    var tmp_res u2
    word_hi, word_lo = word
    if word_hi != 0 goto high_lab
    tmp_res = first_nonzero_byte32(word_lo)
    res = 4 + tmp_res
    return
high_lab:
    res = first_nonzero_byte32(word_hi)
    return
}

fn first_nonzero_byte32(word=0 u32) -> (res=3 u2) {
    var word_hi, word_lo u16
    var tmp_res u1
    word_hi, word_lo = word
    if word_hi != 0 goto high_lab
    tmp_res = first_nonzero_byte16(word_lo)
    res = 2 + tmp_res
    return
high_lab:
    res = first_nonzero_byte16(word_hi)
    return
}

fn first_nonzero_byte16(word=0 u16) -> (res=1 u1) {
    var word_hi, word_lo u8
    word_hi, word_lo = word
    if word_hi != 0 goto high_lab
    res = 1
    return
high_lab:
    res = 0
    return
}