;; BIN module
include "evm.zkasm"
include "../util/bit_xoan.zkasm"
include "../util/byte.zkasm"

fn bin(INST=0x16 u8, ARGUMENT_1 u256, ARGUMENT_2 u256) -> (RES u256) {

   ;;if INST==EVM_INST_SIGNEXTEND goto signextend_call

   if INST==EVM_INST_XOR        goto xor_call
   if INST==EVM_INST_OR         goto or_call
   if INST==EVM_INST_AND        goto and_call
   if INST==EVM_INST_NOT        goto not_call
   if INST==EVM_INST_BYTE       goto byte_call
   var inst u2

xor_call:
   inst = 0
   RES = bit_xoan_u256(inst, ARGUMENT_1, ARGUMENT_2)
   return
or_call:
   inst = 1
   RES = bit_xoan_u256(inst, ARGUMENT_1, ARGUMENT_2)
   return
and_call:
   inst = 2
   RES = bit_xoan_u256(inst, ARGUMENT_1, ARGUMENT_2)
   return
not_call:
   inst = 3
   RES = bit_xoan_u256(inst, ARGUMENT_1, ARGUMENT_2)
   return
byte_call:
   var n u5
   var c0 u251
   c0, n = ARGUMENT_2
   RES = byte256(ARGUMENT_1, n)
   return
}
